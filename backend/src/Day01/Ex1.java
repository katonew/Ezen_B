/* 주석 */
	// 한줄 주석 : 범위지정 ctrl+/
	/* 여러줄 주석 : 범위지정 ctrl+shift+/ */


//1.자바는 클래스의 { }안에서만 코드 작성 해야한다.
//System.out.println("Hello, Java");	//클래스 밖이기 때문에 오류발생

package Day01;
/*
 * package : 패키지 이름이 표시되는 키워드 
 * package 패키지명 : 현재 소스파일이 위치한 패키지명
 */

public class Ex1 {	//class s
	int 변수 = 10;	// class 안이기 때문에 코드 작성 가능
	//2. 실행되는 코드는 main함수{ } 안에서만 코드 작성한다.
		// main함수 : 메인 스레드를 가지고 있는 함수
			//스레드 : 코드를 읽어드리는 흐름 단위
		// m 입력 후 ctrl+스페이스바 -> 엔터
	
	//System.out.println("Hello, Java");	main밖이라서 오류 발생
	public static void main(String[] args) {
		System.out.println("Hello, Java");	//js에서 console.log와 같음
	}
} //class e
/*
 	public : 사용 범위 [ 프로젝트 내 모든 곳에서 사용]
	class : 클래스 선언 시 사용되는 키워드
	Ex1 : 클래스명 [첫글자는 대문자&영어 ]
	{ } : 클래스의 시작과 끝
	
 */

/*
	실제 존재하는 모든 것 -> 코드 
	공기, 돈, 사람 등		객체지향 언어
	[ 성질, 행동 ] 		성질, 행동
		예1) 붕어빵 틀 [클래스]
		반죽 [ 성질, 속성 ]
		굽기 [ 행동 ] 
			붕어빵1[밀가루, 팥]
			붕어빵1[밀가루, 팥]
			붕어빵1[밀가루, 크림]
			- 붕어빵들은 서로 다르다.
			
		예2) 자동차 틀 [클래스]
			속도[속성]
			주행[행동]
							SM7 자동차1	[ 50km/h, 주행중O ]
							SM7 자동차2	[ 0km/h, 주행중X ]
							
			
	자바 = 100% 객체지향언어
	클래스 : 객체지향 생성하기 위해 미리 정의된 틀/설계도
	객체 : 클래스 기반으로 만들어진 식별가능한 메모리/형태
	객체지향[OOP] : 객체들을 모아서 만든 프로그램
	
	코드 -> 프로세스 ---> 프로그램
			
*/




















