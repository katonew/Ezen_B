/*
	반복문 : 코드 반복
		1. for 
			1. for(초기값; 조건문; 증감식) {실행문;}
				1. 초기값 : 반복변수 처음값
				2. 조건문 : 조건이 true 이면 실행 false 이면 실행하지 않음
				3. 증감식 : 반복변수 증가/감소 단위
				4. 실행문 : 만약에 조건이 true이면 실행되는 구역
			2. *배열/리스트
				1. for(초기값;배열.length;증감식){실행문}
				2. for( 반복변수 of 배열/리스트 ){실행문;}
				3. for( 반복변수 in 배열/리스트 ){실행문;}
			
			
		2. while 
			1. 형태
				1. while(true){ 실행문; }  : 무한 루프
				2. 조건이 true 이면 { } 안으로 들어감 : while (조건){}
				3. 순서에 따른 반복
					let i = 0;		//1. 반복 변수선언 : 초기값
					while(조건문){}	//2. 조건문
					증감식{
						실행문
						i++;		//3. 증감식
						실행문		//4. 실행문
					}
		3. 증감식
			i++ vs i+=1 vs i=i+1	: 1씩 증가
			i+=3 vs i=i+3			: 3씩 증가
			예) i=1 일때 i+2			: 홀수만 반복
			예) i=0 일때 i+3			: 3의 배수 반복
				
*/

//1. while의 무한 루프
//while(true){alert('반복실행');}

//2. while [조건이 상수이면 반복]
//while(10>5){alert('실행문');} // 10이 5보다 크기때문에 반복실행

//3.while [조건을 변수로 이용한 반복] // 입력에 따른 조건 결과가 바뀜에 따라 반복 여부
/*let 입력 = prompt('입력: ')
while( 입력 != 'exit'){ 	// 입력된 값이 exit가 아니면 아래 코드 실행
	console.log('실행중')
	입력 = prompt('입력: ')
	
} //while e	//while 종료되는 조건 : 입력된 값이 exit면 종료
*/
	
// 4. while[순서대로 반복]
/*let i = 0; 	//반복 순서 번호 변수 [ 반복 몇번 되었는지 체크 함수]
while(i<10){ //while s // 종료조건 : i가 10이면[false] 종료
	// i는 0부터 9까지 1씩 증가 반복 = 10회 반복
	console.log('실행중2 : ' + i);
	i++;	//i변수[반복변수] 1증가
} //while e

// 1. for문 []
for(let j = 0 ; j<10 ; j++){	//for문 시작
	//i는 0부터 10미만[9]까지 1씩 증가하면서 반복
	console.log('실행중3 : ' + j);
} //for문 끝
*/

//2.배열과 for문
let 과일상자 = ['사과', '포도', '딸기']	//데이터 3개를 저장하는 배열 선언

	//1. 0부터 마지막 인덱스 까지의 J 반복해서 배열명[인데스=J] 요소 호출
for(let j = 0; j<과일상자.length; j++){
	//j는 0부터 배열의 길이[3] 미만까지 1씩 증가하면서 반복 = 0 1 2 -> 3회
		//인덱스[0부터 시작] === 길이 [1부터 시작]
	console.log( j +"번째 요소 : "+ 과일상자[j] )
	
}

	//2. of 키워드 : of 기준으로 오른쪽에 있는 배열/리스트 내 요소 데이터[사과,포도,딸기]을 하나씩 왼쪽 변수에 반복 대입
for(let j of 과일상자){ //for s
	console.log('요소의 데이터 : ' + j);
} //for e

	//3. in 키워드 : in 기준으로 오른쪽에 있는 배열/리스트 내 요소 인덱스[0,1,2]를 하나씩 왼쪽 변수에 반복 대입
for(let j in 과일상자){ //for s
	console.log('요소의 인덱스 : ' + j);
} //for e



























